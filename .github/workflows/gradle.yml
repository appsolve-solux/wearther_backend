name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Give Gradle wrapper execute permissions
        run: chmod +x ./gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 

      - name: Build with Gradle Wrapper
        run: ./gradlew build -x test

      - name: Generate main application.properties
        run: |
          cd ./src/main
          mkdir -p resources 
          cd resources
          touch application.properties
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > application.properties

        shell: bash

      - name: Generate test application.properties
        run: |
          cd ./src/test
          mkdir -p resources  
          cd resources
          touch application.properties
          echo "${{ secrets.TEST_APPLICATION_PROPERTIES }}" > application.properties
        shell: bash

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ github.sha }} -f ./Dockerfile .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ github.sha }}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Starting deployment..."
            cd ~/wearther_backend
            echo "Pulling latest changes from main branch..."
            git fetch --all
            git reset --hard origin/main
            echo "Pulling latest Docker image..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ github.sha }}
            
            echo "Setting environment variables..."
            cat > .env <<EOL
            DB_NAME=${{ secrets.DB_NAME }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
            DOCKERHUB_REPOSITORY=${{ secrets.DOCKERHUB_REPOSITORY }}
            GITHUB_SHA=${{ github.sha }}
            DOCKER_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ github.sha }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            JWT_EXPIRATION_ACCESS=2592000000
            JWT_EXPIRATION_REFRESH=2592000000
            WEATHER_SERVICE_KEY=${{ secrets.WEATHER_SERVICE_KEY }}
            EOL
            echo "Starting Docker containers with docker-compose..."
            docker-compose --env-file .env down
            docker-compose --env-file .env up -d

            echo "Checking Docker containers..."
            docker-compose ps
            echo "Deployment completed successfully!"
            
  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 
